#############
# ZSH
#############

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# zsh theme ("random": load a random one, echo $RANDOM_THEME to know
# which one loaded)
ZSH_THEME="gallois"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Prevents the bug where the command name gets printed in the output
DISABLE_AUTO_TITLE="true"

# Which plugins would you like to load?
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

#############
# Aliases
#############

# Interactive mode, prompts a confirmation to prevent accidental overwriting
alias mv="mv -i"

alias rm-prefix="f(){for file in "$1"*; do mv "$file" "${file#$1}"; done; unset -f f;}; f"

alias ll="ls -alh"
alias gs="git status"

alias kill_gazebo="killall -9 gazebo & killall -9 gzserver & killall -9 gzclient"

#############
# Misc  
#############

# Kill a process using a specific port
# example usage: kill_port 8889
kill_port() {sudo kill -9 $(sudo lsof -t -i:$1)}

# Necessary to maintain colorscheme in tmux
export TERM="screen-256color"

# Builds and run a standalone cpp file with C++17. Usage: cpprun foo.cpp
cpprun () {
    filename="${1%.*}"
    g++ -std=c++17 -o $filename.out $1 && ./$filename.out 
    rm $filename.out
}

# Autoenv
source ~/.autoenv/activate.sh

# Log the memory usage every second to a .csv file in the home directory
# Usage: sh log_memory_usage [filename.csv]
# If no filename is provided, it defaults to 'memory_usage.csv'
log_memory_usage() {
    output_file=${1:-memory_usage.csv}
    if [[ -e "${HOME}/$output_file" ]]; then
        mv "${HOME}/$output_file" "${HOME}/${output_file}_$(date +%Y%m%d_%H%M%S)"
    fi
    echo "Unix Timestamp, Date Time, Memory Used (Bytes), Memory Usage (%)" > "${HOME}/$output_file"
    while true
    do
        current_time=$(date +"%Y-%m-%d %H:%M:%S")
        unix_timestamp=$(date +%s)
        mem_info=$(free -b | awk 'NR==2{print $2,$3}')
        read -r total used <<< "$mem_info"
        if [[ $used == 0 ]]; then
            continue
        fi
        memory_usage=$((used * 100 / total))
        printf -v memory_usage "%.2f" $memory_usage
        echo "$unix_timestamp, $current_time, $used, $memory_usage%" >> "${HOME}/$output_file"
        sleep 1
    done
}













